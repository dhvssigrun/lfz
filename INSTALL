-------------------------
Installation instructions
-------------------------

1. Requirements
---------------

FileZilla depends on the following libraries:
- Nettle >= 3.3
- GnuTLS >= 3.7.0

To compile libfilezilla, the following tools need to be installed:
- A C++17 compiler, e.g. a recent GCC or Clang
- GNU make
- GNU gettext

Optional tools:
- recent automake, autoconf, libtool if you plan to change configure.in or 
  any of the Makefile.am files
- CppUnit >= 1.13.0 if you want to run the tests, which you want.
- Doxygen to build the documentation

2. Compilation
--------------

If using source from the project's Subversion repository,
execute autoreconf -i first to generate configure. This step is
not necessary for source distributions.

Assuming you are in the top source directory, execute the following commands:

mkdir compile
cd compile
../configure
make
make check
make install

For a list of available options to customize your build you can
call ../configure --help

3. Using
--------

To use libfilezilla in your project, you can use pkg-config to add the
required compiler and linker flags.

If your compiler does not enable C++17 (or higher) by default, you may need
to add -std=c++17 or similar to your compiler flags. Check your compiler's
manual for details.
 

4. The exotic Windows platform
------------------------------

There are project files for Visual Studio 2019 you can use to compile
libfilezilla.

To use libfilezilla in your own project, add libfilezilla to the include and
library directories and link against libfilezilla.lib

If you want to link against the DLL version of libfilezilla you must also add
FZ_USING_DLL to your preprocessor defines.
